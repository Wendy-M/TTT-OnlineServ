{"version":3,"sources":["assets/components/CardSection/CardSection.js","components/CheckoutForm/CheckoutForm.js","components/Abonnement/Abonnement.js","assets/components/QRCode/QrCode.js","assets/QRCodeTicket/QRCodeTicket.js","components/Profil/Profil.js","components/Connexion/Connexion.js","components/Inscription/Inscription.js","components/ConnexionAbo/ConnexionAbo.js","assets/components/DailyMenu/DailyMenu.js","components/Personnel/Personnel.js","components/HomePage/HomePage.js","assets/components/OtherMenu/OtherMenu.js","components/Menu/Menu.js","components/PasswordRenew/PasswordRenew.js","components/PasswordReset/PasswordReset.js","assets/components/Navbar/Navbar.js","assets/components/Deconnexion/Deconnexion.js","assets/components/Footer/Footer.js","components/dataClient/dataClient.js","components/App/App.js","serviceWorker.js","index.js"],"names":["CARD_ELEMENT_OPTIONS","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","CardSection","options","Component","CheckoutForm","stripe","useStripe","elements","useElements","handleSubmit","event","createSubscription","a","customerId","paymentMethodId","priceId","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","response","json","result","error","subscription","preventDefault","cardElement","getElement","CardElement","createPaymentMethod","type","card","paymentMethod","console","log","id","className","onSubmit","disabled","stripePromise","loadStripe","Abonnement","Container","Row","Col","QrCode","props","state","uri","this","restaurantName","value","encodeURI","size","QrCodeTicket","Profil","redirect","clear","setLogin","to","handleShow","setState","show","handleClose","renderButtonSub","profil","abonne","variant","onClick","history","push","buttonEdit","editing","putProfilOnClick","buttonCancel","getMonProfil","handleInput","target","name","Headers","responseObject","monProfil","unSubscription","modifProfil","data","bossName","adress","email","bossFirstName","phone","message","modifProfilLogo","e","FormData","src","logo","md","Value","onChange","Button","window","confirm","Connexion","addLogin","password","responseData","token","setItem","userId","Form","InputGroup","FormControl","placeholder","Label","htmlFor","srOnly","Control","xs","Inscription","addNewRegister","Group","controlId","Check","label","marginLeft","href","block","span","offset","DailyMenu","delete","dailyMenu","menu","getDailyMenu","err","noMenu","picture","Card","Img","alt","Body","classNam","Personnel","getWaiterList","serveur","renderMesServeurs","tabServeur","map","element","serveurName","mail","serveurMail","addAffiliation","nom","addReferent","crew","slidesPerPage","slidesPerScroll","clickToChange","centered","infinite","breakpoints","1000","500","animationSpeed","HomePage","getRestaurantName","OtherMenu","getOtherMenu","otherMenu","length","Carousel","display","deleteMenu","index","contentDisplay","Item","width","multiple","accept","Menu","sm","PasswordRenew","passwordRenew","match","params","PasswordReset","passwordReset","Barremenu","connect","login","fluid","Dropdown","Toggle","alignRight","Footer","fixed","collapseOnSelect","expand","bg","Brand","aria-controls","Collapse","Nav","Link","eventKey","DataClient","getDataClient","clientInfo","client","object","Table","striped","bordered","hover","firstname","lastname","age","App","Navbar","exact","path","render","component","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0e0711f6.chunk.js","sourcesContent":["/**\r\n * Use the CSS tab above to style your Element's container.\r\n */\r\nimport React, { Component } from \"react\";\r\nimport { CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CardSection.css\";\r\n\r\nconst CARD_ELEMENT_OPTIONS = {\r\n  style: {\r\n    base: {\r\n      color: \"#32325d\",\r\n      fontFamily: '\"Helvetica Neue\", Helvetica, sans-serif',\r\n      fontSmoothing: \"antialiased\",\r\n      fontSize: \"16px\",\r\n      \"::placeholder\": {\r\n        color: \"#aab7c4\",\r\n      },\r\n    },\r\n    invalid: {\r\n      color: \"#fa755a\",\r\n      iconColor: \"#fa755a\",\r\n    },\r\n  },\r\n};\r\nclass CardSection extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label>\r\n          Paiement\r\n          <CardElement options={CARD_ELEMENT_OPTIONS} />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CardSection;\r\n","import React from \"react\";\r\nimport { useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\r\nimport \"./CheckoutForm.css\";\r\nimport CardSection from \"../../assets/components/CardSection/CardSection\";\r\nexport default function CheckoutForm() {\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const handleSubmit = async (event) => {\r\n    // We don't want to let default form submission happen here,\r\n    // which would refresh the page.\r\n    event.preventDefault();\r\n    if (!stripe || !elements) {\r\n      // Stripe.js has not yet loaded.\r\n      // Make sure to disable form submission until Stripe.js has loaded.\r\n      return;\r\n    }\r\n    // Get a reference to a mounted CardElement. Elements knows how\r\n    // to find your CardElement because there can only ever be one of\r\n    // each type of element.\r\n    const cardElement = elements.getElement(CardElement);\r\n\r\n    // If a previous payment was attempted, get the latest invoice\r\n    /*const latestInvoicePaymentIntentStatus = localStorage.getItem(\r\n      \"latestInvoicePaymentIntentStatus\"\r\n    );*/\r\n\r\n    const { error, paymentMethod } = await stripe.createPaymentMethod({\r\n      type: \"card\",\r\n      card: cardElement,\r\n    });\r\n    if (error) {\r\n      console.log(\"[createPaymentMethod error]\", error);\r\n    } else {\r\n      console.log(\"[PaymentMethod]\", paymentMethod);\r\n      const paymentMethodId = paymentMethod.id;\r\n      const customerId = \"\";\r\n      const priceId = \"\";\r\n      /*if (latestInvoicePaymentIntentStatus === \"requires_payment_method\") {\r\n        // Update the payment method and retry invoice payment\r\n        const invoiceId = localStorage.getItem(\"latestInvoiceId\");\r\n        retryInvoiceWithNewPaymentMethod({\r\n          customerId,\r\n          paymentMethodId,\r\n          invoiceId,\r\n          priceId,\r\n        });\r\n      } else {*/\r\n      /* Create the subscription*/\r\n      createSubscription({ customerId, paymentMethodId, priceId });\r\n    }\r\n    function createSubscription({ customerId, paymentMethodId, priceId }) {\r\n      return (\r\n        fetch(\"http://localhost:8080/restaurateur/createsubscription\", {\r\n          method: \"post\",\r\n          headers: {\r\n            \"Content-type\": \"application/json\",\r\n            Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n          },\r\n          body: JSON.stringify({\r\n            customerId: customerId,\r\n            paymentMethodId: paymentMethodId,\r\n            priceId: \"price_1IGLo3Hoh2Vgz5QdnS6OVonj\",\r\n          }),\r\n        })\r\n          .then((response) => {\r\n            return response.json();\r\n          })\r\n          // If the card is declined, display an error to the user.\r\n          .then((result) => {\r\n            if (result.error) {\r\n              // The card had an error when trying to attach it to a customer.\r\n              throw result;\r\n            }\r\n            return result;\r\n          })\r\n          // Normalize the result to contain the object returned by Stripe.\r\n          // Add the additional details we need.\r\n          .then((result) => {\r\n            return {\r\n              paymentMethodId: paymentMethodId,\r\n              priceId: priceId,\r\n              subscription: result,\r\n            };\r\n          })\r\n        // Some payment methods require a customer to be on session\r\n        // to complete the payment process. Check the status of the\r\n        // payment intent to handle these actions.\r\n        /*.then(handlePaymentThatRequiresCustomerAction)\r\n            // If attaching this card to a Customer object succeeds,\r\n            // but attempts to charge the customer fail, you\r\n            // get a requires_payment_method error.\r\n            .then(handleRequiresPaymentMethod)\r\n            // No more actions required. Provision your service for the user.\r\n            .then(onSubscriptionComplete)\r\n            .catch((error) => {\r\n              // An error has happened. Display the failure to the user here.\r\n              // We utilize the HTML element we created.\r\n              showCardError(error);\r\n            })*/\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className=\"coForm\" onSubmit={handleSubmit}>\r\n      <CardSection />\r\n      <button className=\"submitButton\" disabled={!stripe}>\r\n        Devenir un restaurateur Premium\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./Abonnement.css\";\r\n\r\nimport CheckoutForm from \"../CheckoutForm/CheckoutForm\";\r\n\r\nconst stripePromise = loadStripe(\r\n  \"pk_test_51HAxRlHoh2Vgz5QdMpHXhINQMDhyGPR4gFvzs9vVzocySBI4WCfw8oPa7De6PC2ZJZlQKVQFRDPLU7FIGmXZC0QA00XGutN1eU\"\r\n);\r\n\r\nclass Abonnement extends Component {\r\n  render() {\r\n    return (\r\n      <Container className=\"monAbonnement\">\r\n        <Row className=\"infoAbonnement\">\r\n          <Col>\r\n            <h3>Votre abonnement premium restaurateur TipPourBoire</h3>\r\n            <Elements className=\"cbInput\" stripe={stripePromise}>\r\n              <CheckoutForm />\r\n            </Elements>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Abonnement;\r\n","import React, { Component, Button } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCode.css\";\r\n\r\nclass QrCode extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let uri =\r\n      \"http://localhost:8080/client/getMenu?restaurantName=\" +\r\n      this.props.restaurantName;\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QRCode className=\"qr\" value={encodeURI(uri)} size={250} />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCode;\r\n","import React, { Component, Button } from \"react\";\r\nimport QRCode from \"qrcode.react\";\r\nimport { Col, Row } from \"react-bootstrap\";\r\nimport \"./QrCodeTicket.css\";\r\n\r\nclass QrCodeTicket extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  render() {\r\n    let uri =\r\n      \"http://localhost:8080/client/getMenuTicket?restaurantName=\" +\r\n      this.props.restaurantName;\r\n    return (\r\n      <Row className=\"qrCode\">\r\n        <QRCode className=\"qr\" value={encodeURI(uri)} size={250} />\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QrCodeTicket;\r\n","import React, { Component, Input } from \"react\";\r\nimport { Col, Row, Container, Button, Modal } from \"react-bootstrap\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport QrCodeTicket from \"../../assets/QRCodeTicket/QRCodeTicket\";\r\nimport \"./profil.css\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nclass Profil extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      profil: {},\r\n      editing: true,\r\n      show: false,\r\n      redirect: false,\r\n    };\r\n  }\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      localStorage.clear();\r\n      this.props.setLogin(false);\r\n      return <Redirect to=\"/connexion\" />;\r\n    }\r\n  };\r\n  handleShow = () => {\r\n    this.setState({ show: true });\r\n  };\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n  renderButtonSub = () => {\r\n    if (this.state.profil.abonne === true) {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/dataClient\");\r\n            }}\r\n          >\r\n            Espace premium <br />\r\n          </button>\r\n        </div>\r\n      );\r\n    } else {\r\n      return (\r\n        <div>\r\n          <button\r\n            className=\"signOut button\"\r\n            variant=\"primary\"\r\n            onClick={() => {\r\n              this.props.history.push(\"/abonnement\");\r\n            }}\r\n          >\r\n            Devenir Premium !<br />\r\n          </button>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  buttonEdit = () => {\r\n    if (this.state.editing == true) {\r\n      return (\r\n        <>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              this.setState({ editing: false });\r\n            }}\r\n          >\r\n            Modifier <br />\r\n          </button>\r\n          {this.renderButtonSub()}\r\n        </>\r\n      );\r\n    } else {\r\n      return (\r\n        <button className=\"button\" onClick={this.putProfilOnClick}>\r\n          Confirmer Modification\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  buttonCancel = () => {\r\n    if (this.state.editing == false) {\r\n      return (\r\n        <button\r\n          className=\"button\"\r\n          onClick={() => {\r\n            this.setState({ editing: true });\r\n            this.getMonProfil();\r\n          }}\r\n        >\r\n          Annuler\r\n        </button>\r\n      );\r\n    }\r\n  };\r\n  handleInput = (event) => {\r\n    let profil = this.state.profil;\r\n    profil[event.target.name] = event.target.value;\r\n    this.setState({\r\n      profil: profil,\r\n      // identifier name de l'input = choisir la valeur qui se trouve dans l'input\r\n    });\r\n  };\r\n  /* Affichage Profil */\r\n  getMonProfil = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const monProfil = responseObject;\r\n          this.setState({ profil: monProfil });\r\n          console.log(this.state);\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  unSubscription = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ profil: responseObject });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du profil */\r\n  modifProfil = () => {\r\n    const data = {\r\n      restaurantName: this.state.profil.restaurantName,\r\n      bossName: this.state.profil.bossName,\r\n      adress: this.state.profil.adress,\r\n      email: this.state.profil.email,\r\n      bossFirstName: this.state.profil.bossFirstName,\r\n      phone: this.state.profil.phone,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/profil/edit\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.setState({ editing: true });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  /* Modification du logo */\r\n  modifProfilLogo = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/profil/edit/logo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n          this.getMonProfil();\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  putProfilOnClick = () => {\r\n    this.modifProfil();\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getMonProfil();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"styleProfil \">\r\n        <h2 className=\"title\">Votre Profil</h2>\r\n\r\n        <Col className=\"addImage \">\r\n          <form onSubmit={this.modifProfilLogo} className=\"formLogo\">\r\n            <img\r\n              className=\"restaurantLogo\"\r\n              src={\"http://localhost:8080/\" + this.state.profil.logo}\r\n            ></img>\r\n            <br />\r\n            <br />\r\n            <input type=\"file\" name=\"file\" />\r\n            <br />\r\n            <button className=\"buttonVal\" type=\"submit\">\r\n              Valider\r\n            </button>\r\n          </form>\r\n        </Col>\r\n        <Row>\r\n          {\" \"}\r\n          <Col md={12} className=\"formProfil \">\r\n            <p>\r\n              {this.state.editing ? (\r\n                <h1 className=\"textProfilTitre\">\r\n                  {this.state.profil.restaurantName}\r\n                </h1>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.restaurantName}\r\n                  name=\"restaurantName\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">\r\n                  {this.state.profil.bossFirstName}\r\n                </span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossFirstName\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossFirstName}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.bossName}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"bossName\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.bossName}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.adress}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"adress\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.adress}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.email}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"email\"\r\n                  onChange={this.handleInput}\r\n                  Value={this.state.profil.email}\r\n                />\r\n              )}\r\n            </p>\r\n            <p>\r\n              {this.state.editing ? (\r\n                <span className=\"textProfil\">{this.state.profil.phone}</span>\r\n              ) : (\r\n                <input\r\n                  type=\"text\"\r\n                  Value={this.state.profil.phone}\r\n                  name=\"phone\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              )}\r\n            </p>\r\n            {this.buttonEdit()}\r\n\r\n            {this.buttonCancel()}\r\n          </Col>\r\n          <Col md={12} className=\"formProfil nomProfil center\">\r\n            <p className=\"qr\">QR CODE Ticket </p>\r\n            <QrCodeTicket\r\n              className=\"qrCodeTicket\"\r\n              restaurantName={this.state.profil.restaurantName}\r\n            />\r\n\r\n            <p className=\"qr\">QR CODE </p>\r\n            <QrCode\r\n              className=\"qrCode\"\r\n              restaurantName={this.state.profil.restaurantName}\r\n            />\r\n            <Button\r\n              onClick={() => {\r\n                window.confirm(\"Voulez vous vous déconnecter ?\");\r\n                localStorage.clear();\r\n                this.props.setLogin(false);\r\n                this.props.history.push(\"/\");\r\n              }}\r\n              className=\"signOut1 button\"\r\n            >\r\n              Déconnexion\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profil;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport \"./connexion.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\" };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"https://back-end.osc-fr1.scalingo.io/restaurateur/login\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n\r\n        if (responseData.token) {\r\n          localStorage.setItem(\"token\", responseData.token);\r\n          localStorage.setItem(\"userID\", responseData.userId);\r\n          this.props.setLogin(true);\r\n          this.props.history.push(\"/homepage\");\r\n        }\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"connexion-container\">\r\n        <Row>\r\n          <Col className=\"connexionPass\" md={7}>\r\n            <h1 className=\"titreCo\">Déjà membre ?</h1>\r\n            <h1 className=\"titreCo\">Connectez-vous !</h1>\r\n\r\n            <Form className=\"identifiants\">\r\n              <InputGroup className=\"mb-2 sizeForm\">\r\n                <FormControl\r\n                  name=\"email\"\r\n                  id=\"inlineFormInputGroup\"\r\n                  placeholder=\"Email\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              </InputGroup>\r\n\r\n              <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                Mot de passe\r\n              </Form.Label>\r\n              <Form.Control\r\n                name=\"password\"\r\n                className=\"mb-2\"\r\n                id=\"inlineFormInput\"\r\n                placeholder=\"Mot de passe\"\r\n                type=\"password\"\r\n                onChange={this.handleInput}\r\n              />\r\n\r\n              <Link className=\"inscrip\" to=\"/passwordReset\">\r\n                <p className=\"mdp\">Mot de passe oublié ?</p>\r\n              </Link>\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"mb-2\"\r\n                className=\"sign-up\"\r\n                onClick={this.addLogin}\r\n              >\r\n                Se connecter\r\n              </Button>\r\n\r\n              <Col className=\"colMembre\" xs={12}>\r\n                <p className=\"membre\">\r\n                  Pas encore membre ?\r\n                  <Link className=\"compte\" to=\"/inscription\">\r\n                    {\"\"} Créer mon compte\r\n                  </Link>\r\n                </p>\r\n              </Col>\r\n            </Form>\r\n            {this.state.message}\r\n          </Col>\r\n          <Col className=\"imageDeskRestau\" md={5}></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component, useReducer } from \"react\";\r\nimport \"./Inscription.css\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nclass Inscription extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      restaurantName: \"\",\r\n    };\r\n  }\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addNewRegister = (e) => {\r\n    e.preventDefault();\r\n    const data = new FormData(e.target);\r\n    const headers = new Headers({\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/inscription\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"Bloc-principal\">\r\n        <Row>\r\n        <Col className='colInscr' md={6}>\r\n          <Row className=\"Titre\">\r\n            <h1>Créer mon compte</h1>\r\n          </Row>\r\n          <Row>\r\n            <p>\r\n              Merci de remplir les informations ci-dessous pour finaliser la\r\n              création de votre compte.\r\n            </p>\r\n          </Row>\r\n          <Row>\r\n            <Form className=\"form\" onSubmit={this.addNewRegister}>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group controlId=\"formNom\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nom du restaurant\"\r\n                      name=\"restaurantName\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group controlId=\"formPrenom\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Nom \"\r\n                      name=\"bossName\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group controlId=\"formDate\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Prénom\"\r\n                      name=\"bossFirstName\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group controlId=\"formAdresse\">\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Adresse\"\r\n                  name=\"adress\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              </Form.Group>\r\n              <Row>\r\n                <Col>\r\n                  <Form.Group controlId=\"formVille\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"Téléphone\"\r\n                      name=\"phone\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Group controlId=\"formTel\">\r\n                    <Form.Control\r\n                      type=\"text\"\r\n                      placeholder=\"E-mail\"\r\n                      name=\"email\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                <Col xs={6}>\r\n                  <Form.Group\r\n                    className=\"servicePropose\"\r\n                    controlId=\"formService\"\r\n                  >\r\n                    <Form.Label controlId=\"formService\">\r\n                      Services proposés\r\n                    </Form.Label>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name=\"noon\"\r\n                      label=\"Midi\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name=\"evening\"\r\n                      label=\"Soir\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col xs={6}>\r\n                  <Form.Group controlId=\"formService\">\r\n                    <Form.Label>Sytèmes de pourboires</Form.Label>\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name=\"alone\"\r\n                      label=\"Individuel\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                    <Form.Check\r\n                      type=\"checkbox\"\r\n                      name=\"Collectif\"\r\n                      label=\"Général\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Form.Group controlId=\"formPass\">\r\n                <Form.Label>\r\n                  Mot de passe\r\n                  <p className=\"detailPassword\">\r\n                    8 caractères min. : au moins 1 majuscule, 1 minuscule, 1\r\n                    chiffre et 1 caractère spécial\r\n                  </p>\r\n                </Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Mot de passe\"\r\n                  name=\"password\"\r\n                  onChange={this.handleInput}\r\n                />\r\n              </Form.Group>\r\n              <Row>\r\n                <Col md={9}>\r\n                  <Form.Group controlId=\"formBasicCheckbox\">\r\n                    <Row style={{ marginLeft: \"2px\" }}>\r\n                      <Form.Check type=\"checkbox\" />\r\n                      <a\r\n                        className=\"cgvLink\"\r\n                        href=\"/CGV_TIPTOTHANK.pdf\"\r\n                        target=\"_blanck\"\r\n                      >\r\n                        Acceptez les CGU\r\n                      </a>\r\n                    </Row>\r\n                  </Form.Group>\r\n                </Col>\r\n                <Col md={3}>\r\n                  <Button className=\"submitButton\" block type=\"submit\">\r\n                    S'inscrire\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n            <Col md={{ span: 6, offset: 3 }}>{this.state.message}</Col>\r\n          </Row>\r\n        </Col>\r\n        <Col className='imageDeskRestau' md={6}></Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\nexport default Inscription;\r\n","import Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport InputGroup from \"react-bootstrap/InputGroup\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./ConnexionAbo.css\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Connexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", message: \"\", redirect: false };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      return <Redirect to=\"/abonnement\" />;\r\n    }\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  addLogin = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/loginAbo\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n        localStorage.setItem(\"token\", responseData.token);\r\n        localStorage.setItem(\"userID\", responseData.userId);\r\n        this.setState({ redirect: true });\r\n      });\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"background\">\r\n        <div className=\"connexion-container\">\r\n          <h1 className=\"titreConnexion\">Connexion</h1>\r\n\r\n          <Form className=\"identifiants\">\r\n            <Form.Row className=\"align-items-center\">\r\n              <Row>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInputGroup\" srOnly>\r\n                    Username\r\n                  </Form.Label>\r\n                  <InputGroup className=\"mb-2\">\r\n                    <InputGroup.Prepend>\r\n                      <InputGroup.Text>@</InputGroup.Text>\r\n                    </InputGroup.Prepend>\r\n                    <FormControl\r\n                      name=\"email\"\r\n                      id=\"inlineFormInputGroup\"\r\n                      placeholder=\"Email\"\r\n                      onChange={this.handleInput}\r\n                    />\r\n                  </InputGroup>\r\n                </Col>\r\n                <Col>\r\n                  <Form.Label htmlFor=\"inlineFormInput\" srOnly>\r\n                    Mot de passe\r\n                  </Form.Label>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    className=\"mb-2\"\r\n                    id=\"inlineFormInput\"\r\n                    placeholder=\"Mot de passe\"\r\n                    type=\"password\"\r\n                    onChange={this.handleInput}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Col>\r\n                <Button\r\n                  type=\"submit\"\r\n                  className=\"mb-2\"\r\n                  className=\"sign-up\"\r\n                  onClick={this.addLogin}\r\n                >\r\n                  Se connecter\r\n                </Button>\r\n                <p className=\"mdp\">Mot de passe oublié</p>\r\n              </Col>\r\n            </Form.Row>\r\n            <div className=\"inscription\">\r\n              <Link className=\"mdp\" to=\"/inscription\">\r\n                Vous n'êtes pas encore inscrit ? C'est par ici\r\n              </Link>\r\n            </div>\r\n          </Form>\r\n          {this.redirect()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Connexion;\r\n","import React, { Component } from \"react\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\n\r\nimport \"./DailyMenu.css\";\r\n\r\nclass DailyMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      message: \"\",\r\n      menu: { dailyMenu: { picture: \"\", label: \"\" } },\r\n    };\r\n  }\r\n\r\n  delete = (e) => {\r\n    window.confirm(\"Etes-vous sur de vouloir supprimer le menu du jour ?\");\r\n    e.preventDefault();\r\n    const data = {\r\n      dailyMenu: this.state.menu.dailyMenu,\r\n    };\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/dailymenu/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getDailyMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"PUT\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/dailymenu/add\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getDailyMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  getDailyMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ menu: data.menu });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  noMenu = () => {\r\n    if (\r\n      this.state.menu.dailyMenu.picture == \"\" &&\r\n      this.state.menu.dailyMenu.label == \"\"\r\n    ) {\r\n      return <p>Vous n'avez pas de menu du jour</p>;\r\n    } else {\r\n      return (\r\n        <Card.Img\r\n          variant=\"top\"\r\n          src={\"http://localhost:8080/\" + this.state.menu.dailyMenu.picture}\r\n          className=\"dailyMenu\"\r\n          alt=\"Menu du Jour\"\r\n        />\r\n      );\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    this.getDailyMenu();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"dailyMenuContain\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <h2 className=\"menujour\">Menu du Jour</h2>\r\n          </Col>\r\n          <Col className=\"colMenu\" md={12}>\r\n            <form className=\"formMenu\" onSubmit={this.onSubmit}>\r\n              <input className=\"button\" type=\"file\" name=\"file\" />\r\n\r\n              <button className=\"bouton\" type=\"submit\">\r\n                Valider\r\n              </button>\r\n            </form>\r\n\r\n            {this.noMenu()}\r\n            <Card.Body classNam=\"cardsupp\">\r\n              <p>{this.state.menu.dailyMenu.label}</p>\r\n              <button\r\n                className=\"boutonSupprimer\"\r\n                type=\"submit\"\r\n                onClick={this.delete}\r\n              >\r\n                Supprimer le menu\r\n              </button>\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyMenu;\r\n","import React, { Component, Form, Label, Input } from \"react\";\r\nimport { Row, Col, Button, Container } from \"react-bootstrap\";\r\nimport \"@brainhubeu/react-carousel/lib/style.css\";\r\nimport Carousel, { Dots } from \"@brainhubeu/react-carousel\";\r\nimport \"./Personnel.css\";\r\nimport Icon from \"react-fa\";\r\nclass Personnel extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { serveur: { tabServeur: [] }, email: \"\" };\r\n  }\r\n  getWaiterList = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/management/waiter-list\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ serveur: data });\r\n          console.log(this.state.serveur);\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  renderMesServeurs = () => {\r\n    return this.state.serveur.tabServeur.map((element) => {\r\n      return (\r\n        <div className=\"serveurDiv\">\r\n          <p className=\"serveurP\">{element.serveurName}</p>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {\r\n              const data = {\r\n                mail: element.serveurMail,\r\n              };\r\n\r\n              const headers = new Headers({\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n              });\r\n\r\n              const options = {\r\n                method: \"DELETE\",\r\n                headers: headers,\r\n                body: JSON.stringify(data),\r\n              };\r\n\r\n              fetch(\r\n                \"http://localhost:8080/restaurateur/management/waiter-delete\",\r\n                options\r\n              )\r\n                .then((response) => {\r\n                  return response.json();\r\n                })\r\n                .then(\r\n                  (data) => {\r\n                    this.getWaiterList();\r\n                  },\r\n                  (err) => {\r\n                    console.log(err);\r\n                  }\r\n                );\r\n            }}\r\n          >\r\n            X\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  addAffiliation = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n      nom: this.state.nom,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/management/affiliation\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  addReferent = (e) => {\r\n    e.preventDefault();\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/management/referent\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n\r\n      .then((responseData) => {\r\n        this.setState({ message: responseData.message });\r\n      });\r\n  };\r\n  componentDidMount() {\r\n    this.getWaiterList();\r\n  }\r\n\r\n  crew = () => {\r\n    if (!this.state.serveur) {\r\n      return (\r\n        <p className=\"affiliation\">Vous n'avez pas de personnel affilié</p>\r\n      );\r\n    } else {\r\n      return (\r\n        <Col className=\"crewStyle\">\r\n          <Carousel\r\n            slidesPerPage={5}\r\n            slidesPerScroll={1}\r\n            clickToChange\r\n            centered\r\n            infinite={true}\r\n            breakpoints={{\r\n              1000: {\r\n                // these props will be applied when screen width is less than 1000px\r\n                slidesPerPage: 0,\r\n                clickToChange: false,\r\n                centered: false,\r\n              },\r\n              500: {\r\n                slidesPerPage: 1,\r\n                slidesPerScroll: 1,\r\n                clickToChange: false,\r\n                centered: false,\r\n\r\n                animationSpeed: 2000,\r\n                infinite: false,\r\n              },\r\n            }}\r\n          >\r\n            {this.renderMesServeurs()}\r\n          </Carousel>\r\n        </Col>\r\n      );\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <Container className=\"container personnel\">\r\n        <Row>\r\n          <Col>\r\n            <h2 className=\"title-container\">Gestion de mon équipe</h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col className=\"colAffiliation\">\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Demande d'affiliation\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addAffiliation}\r\n              className=\"button\"\r\n            />\r\n            <Col md={12}>\r\n              <label className=\"demandeAffiliation\">\r\n                Création compte référent pour le pourboire commun\r\n              </label>\r\n            </Col>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n              placeholder=\"Email du serveur\"\r\n              className=\"inputAffi\"\r\n            />\r\n\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Envoyer\"\r\n              onClick={this.addReferent}\r\n              className=\"button\"\r\n            />\r\n            <br />\r\n            {this.state.message}\r\n          </Col>\r\n        </Row>\r\n        <h2 className=\"titleWaiter\">Votre équipe </h2>\r\n        {this.crew()}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Personnel;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport QrCode from \"../../assets/components/QRCode/QrCode\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./HomePage.css\";\r\n\r\nclass HomePage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { restaurantName: \"\" };\r\n  }\r\n  getRestaurantName = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\r\n\r\n      \"X-Requested-With\": \"XMLHttpRequest\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/profil\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ restaurantName: responseObject.restaurantName });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getRestaurantName();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"homepage\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Personnel className=\"personnel\" />\r\n            <h2 className=\"titleQR\">Votre QR Code </h2>\r\n            <QrCode restaurantName={this.state.restaurantName} />\r\n          </Col>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <DailyMenu className=\"menuhome\" />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HomePage;\r\n","import React, { Component } from \"react\";\r\nimport Carousel from \"react-bootstrap/Carousel\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Row from \"react-bootstrap/Row\";\r\n\r\nimport \"./OtherMenu.css\";\r\nclass OtherMenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menu: { otherMenu: [] },\r\n    };\r\n  }\r\n  getOtherMenu = () => {\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/menu\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (data) => {\r\n          this.setState({ menu: data.menu });\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getOtherMenu();\r\n  }\r\n\r\n  noMenu = () => {\r\n    if (this.state.menu.otherMenu && this.state.menu.otherMenu.length) {\r\n      return (\r\n        <div>\r\n          <Carousel>{this.display()}</Carousel>\r\n        </div>\r\n      );\r\n    } else {\r\n      return <p>Vous n'avez pas de menu pour l'instant</p>;\r\n    }\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const data = new FormData(e.target);\r\n\r\n    const headers = new Headers({\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      body: data,\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/menu/add\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  deleteMenu = (e, index) => {\r\n    e.preventDefault();\r\n    const data = { picture: this.state.menu.otherMenu[index].picture };\r\n\r\n    const headers = new Headers({\r\n      \"Content-type\": \"application/json\",\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n\r\n    const options = {\r\n      method: \"DELETE\",\r\n      body: JSON.stringify(data),\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/menu/delete\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseData) => {\r\n          this.setState({ message: responseData.message });\r\n          this.getOtherMenu();\r\n        },\r\n        (err) => {\r\n          console.log(err);\r\n        }\r\n      );\r\n  };\r\n\r\n  display = () => {\r\n    let contentDisplay = [];\r\n    this.state.menu.otherMenu.map((element, index) => {\r\n      contentDisplay.push(\r\n        <Carousel.Item>\r\n          <Card style={{ width: \"100%\" }}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={\"http://localhost:8080/\" + element.picture}\r\n            />\r\n            <Card.Body>\r\n              <Button\r\n                onClick={(e) => this.deleteMenu(e, index)}\r\n                className=\"bouton\"\r\n              >\r\n                Supprimer le menu\r\n              </Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </Carousel.Item>\r\n      );\r\n    });\r\n    return contentDisplay;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"menuContain\">\r\n        <Row>\r\n          <Col md={{ span: 6, offset: 3 }} className=\"menu\">\r\n            <h2>Mes Menus</h2>\r\n          </Col>\r\n          <Col md={12}>\r\n            <form onSubmit={this.onSubmit}>\r\n              <input\r\n                type=\"file\"\r\n                name=\"file\"\r\n                multiple\r\n                accept=\"image/png, image/jpeg, image/jpg\"\r\n              />\r\n              <button className=\"bouton\" type=\"submit\">\r\n                Valider\r\n              </button>\r\n            </form>\r\n            {this.noMenu()}\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OtherMenu;\r\n","import React, { Component } from \"react\";\r\nimport DailyMenu from \"../../assets/components/DailyMenu/DailyMenu\";\r\nimport OtherMenu from \"../../assets/components/OtherMenu/OtherMenu\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport { Container } from \"react-bootstrap\";\r\n\r\nimport \"./Menu.css\";\r\n\r\nclass Menu extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"menus\">\r\n        <Row>\r\n          <Col>\r\n            <DailyMenu />\r\n          </Col>\r\n          <Col md={12} sm={12}>\r\n            <OtherMenu />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","/**\r\n * PasswordRenew.js - PasswordRenew component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport \"./PasswordRenew.css\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Button,\r\n } from \"react-bootstrap\";\r\n/* PasswordRenew component */\r\nclass PasswordRenew extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordRenew = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email || !this.state.password) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n      password: this.state.password,\r\n      token: this.props.match.params.token,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/serveur/password-renew\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className='renewPass'>\r\n      <Row>\r\n        <Col className=\"PassRenewCol\" md={12} >\r\n      <h1 className='newPass'> Votre nouveau mot de passe</h1>\r\n        <form className=\"formRenew\" onSubmit={this.passwordRenew}>\r\n          \r\n          <input\r\n          className=\"inputRenew\"\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            onChange={this.handleInput}\r\n            placeholder=\"Email\"\r\n          />\r\n\r\n<br/>\r\n\r\n         \r\n          <input\r\n          className=\"inputRenew\"\r\n            type=\"password\"\r\n            id=\"password\"\r\n            name=\"password\"\r\n            onChange={this.handleInput}\r\n            placeholder=\"Nouveau mot de passe\"\r\n          />\r\n<br/>\r\n          <Button className=\"renewButton\">Valider</Button>\r\n        </form>\r\n\r\n        <p>{this.state.message}</p>\r\n   \r\n      </Col>\r\n      </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordRenew;\r\n","/**\r\n * PasswordReset.js - PasswordReset component\r\n */\r\n\r\n/* Modules and components imports */\r\nimport React, { Component } from \"react\";\r\nimport {\r\n Row,\r\n Col,\r\n Button,\r\n Container\r\n} from \"react-bootstrap\";\r\nimport \"./PasswordReset.css\";\r\n/* PasswordReset component */\r\nclass PasswordReset extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      message: \"\",\r\n    };\r\n  }\r\n\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n\r\n  passwordReset = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!this.state.email) {\r\n      return;\r\n    }\r\n\r\n    const data = {\r\n      email: this.state.email,\r\n    };\r\n\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n    });\r\n\r\n    const options = {\r\n      method: \"POST\",\r\n      headers: headers,\r\n      body: JSON.stringify(data),\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/serveur/password-reset\", options)\r\n      .then((response) => response.json())\r\n      .then(\r\n        (responseObject) => {\r\n          this.setState({ message: responseObject.message });\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container className=\"passwordReset\">\r\n      <Row>\r\n        <Col className=\"PassResetCol\" md={12}>\r\n          <div className=\"PassResetDiv\">\r\n          <h1 className=\"taille\">Veuillez saisir votre mail </h1>\r\n          <h1 className=\"titrePass taille\">pour réinitialiser votre mot de passe </h1>\r\n             <form  className=\"formReset\" onSubmit={this.passwordReset}>\r\n               \r\n                  <input\r\n                  className='inputReset'\r\n                     type=\"email\"\r\n                      id=\"email\"\r\n                      name=\"email\"\r\n                      onChange={this.handleInput}\r\n                      placeholder=\"Email\"\r\n                 />\r\n                  \r\n             </form>\r\n                     \r\n           </div>\r\n        </Col>\r\n        <Col className=\"ButtonReset\" md={12}>\r\n        <Button className=\"resetButton\">Confirmer</Button>\r\n        <p>{this.state.message}</p>\r\n        </Col>\r\n     </Row>\r\n     </Container>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default PasswordReset;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport \"./navBar.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavLink,\r\n  Dropdown,\r\n  Col,\r\n  Row,\r\n  Container,\r\n} from \"react-bootstrap\";\r\nimport Deconnexion from \"../Deconnexion/Deconnexion\";\r\n\r\nclass Barremenu extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  connect = () => {\r\n    if (!this.props.login) {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/Home\">Inscription</Dropdown.Item>\r\n                <Dropdown.Item href=\"/\">Connexion</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    } else {\r\n      return (\r\n        <Container fluid>\r\n          <Row className=\"partie1\">\r\n            <Dropdown className=\"nav justify-content-right\">\r\n              <Dropdown.Toggle alignRight variant=\"success\" id=\"dropdown-basic\">\r\n                <img src=\"/image/user.png\" />\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item href=\"/Profil\">profil</Dropdown.Item>\r\n                <Dropdown.Item href=\"/menus\">Menu</Dropdown.Item>\r\n                <Dropdown.Item href=\"/equipe\">Mon équipe</Dropdown.Item>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n\r\n            <Col className=\"logoPartie1\" md={12}>\r\n              <Link to=\"/homepage\">\r\n                <img src=\"/image/logoJaune.png\" />\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      );\r\n    }\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    this.connect();\r\n  }\r\n  render() {\r\n    return <div className=\"barre-de-menu\">{this.connect()}</div>;\r\n  }\r\n}\r\nexport default Barremenu;\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport \"./Deconnexion.css\";\r\n\r\nclass Deconnexion extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      redirect: false,\r\n    };\r\n  }\r\n\r\n  redirect = () => {\r\n    if (this.state.redirect) {\r\n      localStorage.clear();\r\n      this.props.setLogin(false);\r\n      return <Redirect to=\"/connexion\" />;\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"deconnect\">\r\n        <button\r\n          onClick={() => {\r\n            this.setState({ redirect: true });\r\n          }}\r\n          className=\"signOut\"\r\n        >\r\n          <i class=\"fas fa-sign-out-alt\"></i>\r\n        </button>\r\n        {this.redirect()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Deconnexion;\r\n","import React, { Component } from \"react\";\r\nimport \"./footer.css\";\r\nimport {\r\n  Navbar,\r\n  Nav,\r\n  Form,\r\n  FormControl,\r\n  Button,\r\n  NavDropdown,\r\n} from \"react-bootstrap\";\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer\">\r\n        <Navbar fixed=\"bottom\" collapseOnSelect expand=\"lg\" bg=\"#edeaea\">\r\n          <Navbar.Brand href=\"#home\" className=\"textFooter\">\r\n            @TiPourBoire\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link\r\n                href=\"/CGV_TIPTOTHANK.pdf\"\r\n                target=\"_blanck\"\r\n                className=\"textFooter\"\r\n              >\r\n                Condition Général\r\n              </Nav.Link>\r\n              <Nav.Link href=\"https://tipourboire.com\" className=\"textFooter\">\r\n                Contact\r\n              </Nav.Link>\r\n            </Nav>\r\n            <Nav>\r\n              {/*<Nav.Link href=\"#deets\" className=\"textFooter\">\r\n                Langues\r\n    </Nav.Link>*/}\r\n              <Nav.Link eventKey={2} href=\"https://tipourboire.com\" className=\"textFooter\">\r\n                A propos\r\n              </Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nclass DataClient extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      client : [] ,\r\n    };\r\n  }\r\n  getDataClient = () => {\r\n    const headers = new Headers({\r\n      \"Content-Type\": \"application/json\",\r\n      /**on ajoute  pour l'AUTHENTIFICATION le header autorization qui a comme valeur bearer(puis espace) suivi par le token de l'user */\r\n      Authorization: \"bearer \" + localStorage.getItem(\"token\"),\r\n    });\r\n  \r\n    \r\n    const options = {\r\n      method: \"GET\",\r\n      headers: headers,\r\n    };\r\n\r\n    fetch(\"http://localhost:8080/restaurateur/getDataClient\", options)\r\n      .then((response) => {\r\n        return response.json();\r\n      })\r\n      .then(\r\n        (responseObject) => {\r\n          const clientInfo = responseObject;\r\n          this.setState({ client: clientInfo, object: clientInfo });\r\n        },\r\n\r\n        (error) => {\r\n          console.log(error);\r\n        }\r\n      );\r\n  };\r\n  display = () => {\r\n    return this.state.client.map((element, index) => {\r\n      return (\r\n        <Table striped bordered hover>\r\n        <tbody>\r\n          <tr>\r\n            <td type=\"text\" id=\"firstname\" name=\"firstname\">\r\n              {\" \"}\r\n              {element.firstname}\r\n            </td>\r\n            <td type=\"text\" id=\"lastname\" name=\"lastname\">\r\n              {\" \"}\r\n              {element.lastname}\r\n            </td>\r\n            <td type=\"text\" id=\"email\" name=\"email\">\r\n              {\" \"}\r\n              {element.email}\r\n            </td>\r\n            <td type=\"text\" id=\"phone\" name=\"phone\">\r\n              {\" \"}\r\n              {element.phone}\r\n            </td>\r\n            <td type=\"text\" id=\"age\" name=\"age\">\r\n              {\" \"}\r\n              {element.age}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </Table>\r\n      )\r\n    })\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getDataClient();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>  \r\n        <h3>Base de données client</h3>\r\n        <div>\r\n        {this.display()}\r\n        </div>\r\n       \r\n      </div>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default DataClient\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport Abonnement from \"../Abonnement/Abonnement\";\r\nimport Profil from \"../Profil/Profil\";\r\nimport Connexion from \"../Connexion/Connexion\";\r\nimport ConnexionAbo from \"../ConnexionAbo/ConnexionAbo\";\r\nimport Inscription from \"../Inscription/Inscription\";\r\nimport HomePage from \"../HomePage/HomePage\";\r\nimport Menu from \"../Menu/Menu\";\r\nimport Personnel from \"../Personnel/Personnel\";\r\nimport PasswordRenew from \"../PasswordRenew/PasswordRenew\";\r\nimport PasswordReset from \"../PasswordReset/PasswordReset\";\r\n\r\nimport Navbar from \"../../assets/components/Navbar/Navbar\";\r\nimport Footer from \"../../assets/components/Footer/Footer\";\r\nimport DataClient from \"../dataClient/dataClient\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      login: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (localStorage.getItem(\"token\") !== null) {\r\n      this.setState({ login: true });\r\n    }\r\n  }\r\n\r\n  setLogin = (value) => {\r\n    this.setState({ login: value });\r\n  };\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Router>\r\n          <Navbar setLogin={this.setLogin} login={this.state.login} />\r\n\r\n          <Switch>\r\n            <Route\r\n              exact\r\n              path=\"/\"\r\n              render={(props) => (\r\n                <Connexion setLogin={this.setLogin} {...props} />\r\n              )}\r\n            />\r\n            <Route path=\"/homepage\" component={HomePage} />\r\n\r\n            <Route path=\"/inscription\" component={Inscription} />\r\n            <Route\r\n              path=\"/profil\"\r\n              render={(props) => <Profil setLogin={this.setLogin} {...props} />}\r\n            />\r\n            <Route path=\"/dataClient\" component={DataClient} /> \r\n            <Route path=\"/menus\" component={Menu} />\r\n            <Route path=\"/equipe\" component={Personnel} />\r\n            <Route path=\"/abonnement\" component={Abonnement} />\r\n            <Route path=\"/passwordRenew\" component={PasswordRenew} />\r\n            <Route path=\"/passwordReset\" component={PasswordReset} />\r\n            \r\n          </Switch>\r\n\r\n          <Footer />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"../src/components/App/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}